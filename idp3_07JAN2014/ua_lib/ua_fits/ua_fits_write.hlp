;*NAME:;	UA_FITS_WRITE;;*PURPOSE:;	To write a fits primary data unit or extension.;;*CATEGORY:;	INPUT/OUTPUT;;*CALLING SEQUENCE:;	UA_FITS_WRITE, filename_or_fcb, data, [header_in];;*INPUTS:;	FILENAME_OR_FCB: name of the output data file or the FITS control;		block returned by UA_FITS_OPEN (called with the /WRITE or;		/APPEND) parameters.;;*OPTIONAL INPUTS:;	DATA: data array to write.  If not supplied or set to a scalar, a;		null image is written.;	HEADER_IN: FITS header keyword.  If not supplied, a minimal basic;		header will be created.  Required FITS keywords, SIMPLE,;		BITPIX, XTENSION, NAXIS, ... are added by UA_FITS_WRITE and;		do not need to be supplied with the header.  If supplied,;		thier values will be updated as necessary to reflect DATA.;;*KEYWORD PARAMETERS:;;	XTENSION: type of extension to write (Default="IMAGE"). If not;		supplied, it will be taken from HEADER_IN.  If not in either;		place, the default is "IMAGE".  This parameter is ignored;		when writing the primary data unit.;	EXTNAME: EXTNAME for the extension.  If not supplied, it will be taken;		from HEADER_IN.  If not supplied and not in HEADER_IN, no;		EXTNAME will be written into the output extension.;	EXTVER: EXTVER for the extension.  If not supplied, it will be taken;               from HEADER_IN.  If not supplied and not in HEADER_IN, no;               EXTVER will be written into the output extension.;	EXTLEVEL: EXTLEVEL for the extension.  If not supplied, it will be taken;               from HEADER_IN.  If not supplied and not in HEADER_IN, no;               EXTLEVEL will be written into the output extension.;	NaNvalue: data value in DATA to be replaced with IEEE NaN in the output;		file.;       /NO_ABORT: Set to return to calling program instead of a RETALL;               when an I/O error is encountered.  If set, the routine will;               return with !err=-1 and a message in the keyword MESSAGE.;               If not set, UA_FITS_READ will print the message and issue a;               RETALL;       /NOEXTEND: Don't fiddle with the 'EXTEND' keyword, don't add it where;		it wasn't, don't delete it where it is.  Don't touch it.;       MESSAGE: value of the error message for use with /NO_ABORT;	HEADER: actual output header written to the FITS file.;	/NO_DATA: Set if you only want UA_FITS_WRITE to write a header.  The;		header supplied will be written without modification and;		the user is expected to write the data using WRITEU to unit;		FCB.UNIT. When UA_FITS_WRITE is called with /NO_DATA, the user is;		responsible for the validity of the header, and must write;		the correct amount and format of the data.  When UA_FITS_WRITE;		is used in this fashion, it will pad the data from a previously;		written extension to 2880 blocks before writting the header.;;*NOTES:;	If the first call to UA_FITS_WRITE is an extension, UA_FITS_WRITE will;	automatically write a null image as the primary data unit.;;	Keywords and history in the input header will be properly separated;	into the primary data unit and extension portions when constructing;	the output header (See UA_FITS_READ for information on the internal;	Header format which separates the extension and PDU header portions).;	;*EXAMPLES:;	Write an IDL variable to a FITS file with the minimal required header.;		UA_FITS_WRITE,'newfile.fits',ARRAY;;	Write the same array as an image extension, with a null Primary data;	unit.;		UA_FITS_WRITE,'newfile.fits',ARRAY,xtension='IMAGE';;	Write 4 image extensions to the same file.;		UA_FITS_OPEN,'newfile.fits',fcb;		UA_FITS_WRITE,fcb,data1,extname='FLUX',extver=1;		UA_FITS_WRITE,fcb,err1,extname'ERR',extver=1;		UA_FITS_WRITE,fcb,data2,extname='FLUX',extver=2;		UA_FITS_WRITE,fcb,err2,extname='ERR',extver=2;		UA_FITS_CLOSE,FCB;		;*HISTORY:;	Written by:	D. Lindler	August, 1995